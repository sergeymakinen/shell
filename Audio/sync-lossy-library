#!/bin/bash

#
# Parameters
#

LOSSLESS_PATH="/Volumes/Archive/Audio/Music"

LOSSY_PATH="~/Lossy Music"

LOG_PATH="~/Library/Logs/com.sergeyreznikov.SyncLossyLibrary"

#
# Requires MediaInfo, XLD
#

function equal_left_right {
	if [ ! -f "$1" ] || [ ! -f "$2" ]; then
		return 1
	fi
	if [ "$(stat -f %z/%m "$1")" == "$(stat -f %z/%m "$2")" ]; then
		return 0
	else
		return 1
	fi
}

function log {
	if [ -f "$1" ]; then
		echo "$2" >> "$1"
	fi
}

function realpath {
	python -c "import os, sys; print os.path.realpath(os.path.expanduser(sys.argv[1]));" "$1"
}

function requires_encoding {
	if [ "${1: -4}" == ".m4a" ] && [ $(mediainfo '--Inform=Audio;%Format%' "$1") == "ALAC" ]; then
		return 0
	else
		return 1
	fi
}

function xld {
	/Applications/XLD.app/Contents/MacOS/XLD --cmdline "$@"
}

LOSSLESS_PATH=$(realpath "$LOSSLESS_PATH")
if [ ! -d "$LOSSLESS_PATH" ]; then
	echo "No lossless directory '$LOSSLESS_PATH'"
	exit 1
fi
LOSSLESS_PATH_LENGTH=${#LOSSLESS_PATH}
LOSSY_PATH=$(realpath "$LOSSY_PATH")
if [ ! -d "$LOSSY_PATH" ]; then
	echo "No lossy directory '$LOSSY_PATH'"
	exit 1
fi
LOSSY_PATH_LENGTH=${#LOSSY_PATH}
LOG_PATH=$(realpath "$LOG_PATH")
LOG_FILE="$LOG_PATH/$(date -u +'%Y-%m-%dT%H-%M-%SZ').log"
if [ -d "$LOG_PATH" ]; then
	touch "$LOG_FILE"
fi

# Added/updated
while IFS= read -r -d '' lossless_file; do
	lossless_substring=${lossless_file:$LOSSLESS_PATH_LENGTH}
	if ! equal_left_right "$lossless_file" "$LOSSY_PATH$lossless_substring"; then
		mkdir -p "$(dirname "$LOSSY_PATH$lossless_substring")"
		if requires_encoding "$lossless_file"; then
			xld --profile Lossy -o "$LOSSY_PATH$lossless_substring" "$lossless_file"
			log "$LOG_FILE" "Encoded '$lossless_substring'"
		else
			cp "$lossless_file" "$LOSSY_PATH$lossless_substring"
			log "$LOG_FILE" "Copied '$lossless_substring'"
		fi
		if [ -f "$LOSSY_PATH$lossless_substring" ]; then
			touch -r "$lossless_file" "$LOSSY_PATH$lossless_substring"
		fi
	fi
done < <(find "$LOSSLESS_PATH" -type f \( -name '*.m4a' -or -name '*.mp3' \) -print0)

# Removed
while IFS= read -r -d '' lossy; do
	lossy_substring=${lossy:$LOSSY_PATH_LENGTH}
	if ( [ -d "$lossy" ] && [ ! -d "$LOSSLESS_PATH$lossy_substring" ] ) || ( [ -f "$lossy" ] && [ ! -f "$LOSSLESS_PATH$lossy_substring" ] ); then
		rm -drf "$lossy"
		log "$LOG_FILE" "Removed '$lossy_substring'"
	fi
done < <(find "$LOSSY_PATH" -print0)
